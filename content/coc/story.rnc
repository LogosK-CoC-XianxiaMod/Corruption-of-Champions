default namespace = "xxc-story"

start = story | zone
# core xlogic
content =
    text | b | i | font | if | switch | xcc-content
expression = text
array-content-expression = text
if = element if {
    attribute test { expression },
    content*,
    (elseif|else)?
}
elseif = element elseif {
    attribute test { expression },
    content*,
    (elseif|else)?
}
else = element else {
    content*
}
switch = element switch {
    attribute value { expression }?,
    case*,
    Default?
}
case = element case {
    attribute test { expression }?,
    attribute value { expression }?,
    attribute values { array-content-expression }?,
    attribute lt { expression }?,
    attribute gt { expression }?,
    attribute ne { expression }?,
    attribute lte { expression }?,
    attribute gte { expression }?,
    content*
}
Default = element default {
    content*
}
# xxc statements
b = element b { content }
i = element i { content }
font = element font {
    attribute color { text }?,
    content
}
xcc-content = Text | String
    | lib | story | extend-story | zone | extend-zone
    | display | dynStats | output | Include
namedBlock = attribute name { text }?, content*
Text = element text { namedBlock }
String = element string { namedBlock }
lib = element lib { namedBlock }
story = element story { namedBlock }
extend-story = element extend-story { namedBlock }
zone = element zone {
    namedBlock,
    encounter*
}
extend-zone = element extend-zone {
    namedBlock,
    encounter*
}
encounter = element encounter {
    attribute name { text },
    attribute chance { expression }?,
    attribute when { expression }?,
    content*
}
display = element display {
    attribute ref { text }
}
dynStats = element dynStats {
    attribute str { expression }?,
    attribute tou { expression }?,
    attribute spe { expression }?,
    attribute int { expression }?,
    attribute lib { expression }?,
    attribute sen { expression }?,
    attribute lus { expression }?,
    attribute cor { expression }?,
    attribute scale { expression }?
}
output = element output { expression }
Include = element include {
    attribute path { text }
}